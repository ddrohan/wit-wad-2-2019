{"type":"lab","chapters":[{"title":"# Lab Vue 01 - DonationVue-1.0 (Vue Client App)","shortTitle":"Lab-Vue-01","contentMd":"# Lab Vue 01 - DonationVue-1.0 (Vue Client App)\n\nThis lab involves building your 1st Vue Web App - **DonationVue-1.0**.\n\nTo begin with, it won't actually do much, but it will give you an introduction to some of the basics of what constitutes a Vue Web App, and set up the navigation we need for all the pages in our existing Donation Web App Server.\n\nYou can have a look at the this version of the app in action on the YouTube Channel [here](https://youtu.be/bxr1fCouy08)\n"},{"title":"# Step 1 - Objectives","shortTitle":"01","contentMd":"# Step 1 - Objectives\n\nIn this Lab, you will be required to build the first version of our (Client) Vue Web App, called **DonationVue-1.0**. We will use WebStorm to initially build the most basic starter Vue app and then 'customise' the app to suit our requirements. In this version we will just set up the 'links' we need in our app and introduce some simple **components** and **routes**.  \n\nOn completion of this lab you'll be able to\n\n* design an initial layout for the app\n* add some basic **components** to manage your pages (your **templates**)\n* implement basic navigation using the **Router** component\n* be able to use 2-way Data Binding\n"},{"title":"","shortTitle":"02","contentMd":"\n# Step 2 - Setup\n\nFirst thing you should do ( if you haven't done so already) is install the **Vue CLI** so run\n\n~~~\nnpm install -g vue-cli\n~~~\n\nNext, you'll need the **Git** application/executable (depending on Mac/Windows)\n\nso you can get the respective installers\n\nhere [Git for Mac](https://git-scm.com/download/mac)\n\nand\n\nhere [Git for Windows](https://git-scm.com/download/win)\n\n\nNext, launch WebStorm and create a basic **Vue.js** application and name it appropriately, as below\n\n![](img/labvue0101.png)\n\nNOTE : Make sure you choose 'webpack' as the project template, if not already selected and if you don't see a path to the vue-cli then you don't have it installed so visit [Vue Installation](https://vuejs.org/v2/guide/installation.html) to install.\n\nYou can accept all the defaults, with the exception of the 'test runner' option, so choose *Karma and Mocha*.\n\n![](img/labvue0102.png)\n\nAlso, if you chose to install **ESLint** to lint your code, you better take care how you write your javascript :)\n\nYour project will look like this - there's **a lot** going on here, but we'll run through the important stuff as we progress through the lab :)\n\n![](img/labvue0103.png)\n\nTo run the app we need to use npm\n\n~~~js\nnpm run start\n~~~\n\nin the current directory but WebStorm can do this for us, so choose the npm tab and double-click 'start'\n\n![](img/labvue0104.png)\n\nYou'll get something along these lines\n\n![](img/labvue0105.png)\n\nand if you then visit\n\n~~~\nhttp://localhost:8080\n~~~\n\nyou should see your first Vue Web App, like so\n\n![](img/labvue0106.png)\n\n**Well Done!!**\n\nNOTE : IF YOU GET AN ERROR ALONG THE LINES OF\n\n~~~\nBrowserslistError: Unknown browser query `dead`\n~~~\n\nTHEN YOU NEED TO FOLLOW THESE STEPS\n\n1. Open 'package.json' of '\\node_module\\bootstrap'\n2. Find 'browserlist'\n3. In the List Array, you will notice \"not dead\" - DELETE THIS\n4. Done :)\n\nThe next few steps involve 'customising' this app to look like this\n\n![](img/labvue01complete.png)\n"},{"title":"","shortTitle":"03","contentMd":"\n# Step 3 - Adding Some Basic Navigation\n\nWe're going to use a Navigation bar to allow a user to navigate our app and use certain features. We'll begin by adding a 'Manage Donations' & 'Donate' option - they won't actually do anything except display a message, but it'll be a nice simple start.\n\nBefore we can add our *navbar* there's a few dependencies and assets we need to add (there'll be quite a lot by the time we're finished!!)\n\nThe first one (and important one) is\n\n~~~js\nbootstrap-vue\n~~~\n\nso go ahead and add that now via the npm option in Webstorm.\n\nWebStorm->Preferences->Languages & Frameworks->NodeJS & NPM\n\nNow, open your 'main.js' and import the following\n\n~~~js\nimport BootstrapVue from 'bootstrap-vue'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap-vue/dist/bootstrap-vue.css'\n~~~\n\nand finally add\n\n~~~js\nVue.use(BootstrapVue)\n~~~\n\n\nNow open your **'index.html'** and add this link to end of your **'HEAD'** tag (as we'll be using Font Awesome Icons)\n\n~~~html\n<link rel=\"stylesheet\"\n         href=\"https://netdna.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.css\" />\n~~~\n\nFinally, download some assets here and copy into you own assets directory  **[assets](archives/assets.zip)**\n\nBuild your app again, to make sure there's no errors and then move on to adding a navbar.\n\n\nFirst thing to do is replace the current **template** html in 'App.vue' with this\n\n~~~html\n<b-navbar toggleable=\"md\" variant=\"dark\" type=\"dark\">\n      <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n      <img src=\"./assets/mevnnav.png\" class=\"img-circle\" style=\"padding: 5px\">\n      <b-navbar-brand to=\"/\">Donations Web App</b-navbar-brand>\n      <b-collapse is-nav id=\"nav_collapse\">\n        <b-navbar-nav>\n          <b-nav-item to=\"/#\"><i class=\"fa fa-home\" style=\"padding: 5px\"> Home</i></b-nav-item>\n          <b-nav-item to=\"/donations\"><i class=\"fa fa-list\" style=\"padding: 5px\"> Manage Donations</i></b-nav-item>\n        </b-navbar-nav>\n        <b-navbar-nav class=\"ml-auto\">\n          <b-nav-item to=\"/login\"><i class=\"fa fa-sign-in\" style=\"padding: 5px\"> Login </i></b-nav-item>\n          <b-nav-item to=\"/logout\"><i class=\"fa fa-sign-out\" style=\"padding: 5px\"> Logout </i></b-nav-item>\n          <i class=\"fa fa-pied-piper-alt fa-1x\" style=\"padding: 5px; color: white;\"></i>\n        </b-navbar-nav>\n      </b-collapse>\n    </b-navbar>\n~~~\n\nNOTE : make sure it's between the\n\n~~~html\n<div>\n~~~\ntag and before the\n\n~~~html\n<router-view>\n~~~\n\ntag\n\nNext **rename** the 'HelloWorld' component to 'Home' and replace all it's code with the following\n\n~~~js\n<template>\n  <div class=\"hero\">\n      <h1 class=\"vue-title\">Homer for President !!</h1>\n\n        <table align=\"center\">\n          <tr>\n            <td>\n              <p class=\"lead\"><b><i>Time for a change !!</i></b>\n              <p>Out with Boring Prumt - Giving has never been so easy.</p>\n              <p>Just click <a href =\"/donate\">here</a> to go to</p>\n              <p>the Donation page and empty your wallet</p>\n            </td>\n            <td>\n              <img src=\"../assets/homer.gif\" alt=\"description here\" />\n            </td>\n          </tr>\n        </table>\n\n      <p></p>\n      <p class=\"lead\">This is the homepage of your <b>MEVN</b> Web app</p>\n    </div>\n</template>\n\n<style>\n  .hero {\n    height: 100vh;\n    margin-top: 30px;\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n  }\n  .hero .lead {\n    font-weight: 200;\n    font-size: 2.5rem;\n  }\n  #app1 {\n    width: 60%;\n    margin: 0 auto;\n  }\n  .vue-title {\n    font-size: 70pt;\n    margin-bottom: 10px;\n  }\n</style>\n~~~\n\nThere'll be a few errors, so see if you can fix them.\n\nOnce you have, and you run the app again, you'll get something like This\n\n\n![](img/labvue0107.png)\n\n\nNow, let's add some functionality and allow the user to navigate to the 'Manage Donations' page.\n"},{"title":"","shortTitle":"04","contentMd":"\n# Step 4 - Implement the 'Manage Donations' Page\n\nAt this point we have a simple navigation bar but none of the links work - in this step we'll add in a **Vue Component** that allows the user to 'manage' the donations as well as visiting the 'Home' page.\n\nFirstly, open up 'App.vue' and confirm the 'link' to 'manage' donations.\n\nNext, open 'router/index.js' and confirm that the 'Home' route is present\n\n~~~js\n  {\n    path: '/',\n    name: 'Home',\n    component: Home\n  }\n~~~\n\nWe need to add a similar route for our **'/donations'** path so the first thing to do is go ahead and add a new **Donations** component\n\nNew->Vue Component and make sure you store it in the *components* directory\n\n![](img/labvue0108.png)\n\n\nYou'll initially have this\n\n~~~js\n<template>\n\n</template>\n\n<script>\n    export default {\n        name: \"Donations\"\n    }\n</script>\n\n<style scoped>\n\n</style>\n~~~\n\nso add the following to the template tag\n\n~~~html\n<div class=\"hero\">\n  <h3 class=\"vue-title\"><i class=\"fa fa-list\" style=\"padding: 3px\"></i>{{messagetitle}}</h3>\n</div>\n~~~\n\nreplace the export statement with the following\n\n~~~js\nexport default {\n  name: 'Donations',\n  data () {\n    return {\n      messagetitle: ' Donations List '\n    }\n  }\n}\n~~~\n\nand add the following to the style tag\n\n~~~html\n.vue-title {\n   margin-top: 30px;\n   text-align: center;\n   font-size: 45pt;\n   margin-bottom: 10px;\n }\n~~~\n\nHere's the full Donations component for reference\n\n~~~js\n<template>\n  <div class=\"hero\">\n    <h3 class=\"vue-title\"><i class=\"fa fa-list\" style=\"padding: 3px\"></i>{{messagetitle}}</h3>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Donations',\n  data () {\n    return {\n      messagetitle: ' Donations List '\n    }\n  }\n}\n</script>\n\n<style scoped>\n  .vue-title {\n    margin-top: 30px;\n    text-align: center;\n    font-size: 45pt;\n    margin-bottom: 10px;\n  }\n</style>\n~~~\n\nNow, we need to 'wire it up' so open your 'router/index.js' again and add the following route object\n\n~~~js\n    {\n      path: '/donations',\n      name: 'Donations',\n      component: Donations\n    }\n~~~\n\nIf you try and run your app you'll probably get the following error\n\n![](img/labvue0109.png)\n\nso add the following import to fix the issue\n\n~~~js\nimport Donations from '@/components/Donations'\n~~~\n\nRun you app again and you should get the following when your navigate to 'Manage Donations'\n\n![](img/labvue0110.png)\n\n\nIt's not much at the moment, but we now have navigation features in our app.\n\nThe next step is to add in the rest of the navigation options\n"},{"title":"","shortTitle":"05","contentMd":"\n# Step 5 - Implementing the 'Donate', 'About Us' & 'Contact Us' Pages\n\nThis step involves adding more navigation links to our nav bar to take the user to the other pages available, like so\n\n![](img/labvue0111.png)\n\n## Updating the Navigation Bar\n\nJust to get you started, replace the current navbar in your 'App.vue' with this one\n\n~~~html\n<b-navbar toggleable=\"md\" variant=\"dark\" type=\"dark\">\n     <b-navbar-toggle target=\"nav_collapse\"></b-navbar-toggle>\n     <img src=\"./assets/mevnnav.png\" class=\"img-circle\" style=\"padding: 5px\">\n     <b-navbar-brand to=\"/\">Donations Web App</b-navbar-brand>\n     <b-collapse is-nav id=\"nav_collapse\">\n       <b-navbar-nav>\n         <b-nav-item to=\"/#\"><i class=\"fa fa-home\" style=\"padding: 5px\"> Home</i></b-nav-item>\n         <b-nav-item to=\"/donations\"><i class=\"fa fa-list\" style=\"padding: 5px\"> Manage Donations</i></b-nav-item>\n         <b-nav-item to=\"/donate\"><i class=\"fa fa-money\" style=\"padding: 5px\"> Donate</i></b-nav-item>\n         <b-nav-item to=\"/map\"><i class=\"fa fa-globe\" style=\"padding: 5px\"> Map</i></b-nav-item>\n       </b-navbar-nav>\n         <b-navbar-nav class=\"ml-auto\">\n           <b-nav-item to=\"/about\"><i class=\"fa fa-info\" style=\"padding: 5px\"> About Us</i></b-nav-item>\n           <b-nav-item to=\"/contact\"><i class=\"fa fa-comment\" style=\"padding: 5px\"> Contact Us</i></b-nav-item>\n           <b-nav-item to=\"/login\"><i class=\"fa fa-sign-in\" style=\"padding: 5px\"> Login </i></b-nav-item>\n           <b-nav-item to=\"/logout\"><i class=\"fa fa-sign-out\" style=\"padding: 5px\"> Logout </i></b-nav-item>\n           <i class=\"fa fa-pied-piper-alt fa-1x\" style=\"padding: 5px; color: white;\"></i>\n       </b-navbar-nav>\n     </b-collapse>\n   </b-navbar>\n~~~\n\nFor the purposes of the Case Study we'll only be implementing\n\n- /donations (already done)\n- /donate\n- /about\n- /contact\n\nand it's really only the first two will contain any logic, but it'll be a good exercise to implement them all.\n\nThe process is the same as was done for */donations* so have a go at the other 3. You'll need to\n\n1. Create a separate **component** for each\n2. Decide inside each components **template** how it will render\n3. **style** it appropriately\n4. Add the necessary **script** ing for (this time)  displaying the Title (our 2-way reactive data binding)\n\nAway you go!!\n\n\nOnce you're done, you should have something like these\n\n[Click to see Video](https://youtu.be/bxr1fCouy08)\n"},{"title":"# Solution - Lab Vue 01","shortTitle":"Solution","contentMd":"# Solution - Lab Vue 01\n\nYou can find the solution to this lab **[here](archives/donationvue-1.0.zip)**.\n"}]}