{"type":"lab","chapters":[{"title":"# JavaScript Lab 1 - Functions & Callbacks","shortTitle":"JS.Lab-01","contentMd":"# JavaScript Lab 1 - Functions & Callbacks\n\nIn these labs we're going to build a very simple Console Version of our Node Web App (while we learn about Web Apps) using **WebStorm**.\n\nIf you haven't done so already, download webStorm [here](https://www.jetbrains.com/webstorm/?fromMenu), and don't forget to register with your **wit** official email to get the Educational download [here](https://www.jetbrains.com/education/programs/?fromMenu)\n\nThis app won't have any web functionality at all but it will take you through a brief look at using javascript and callbacks in a Node Console App.\n\nOnce completed and running via WebStorm, your App Menu will look something like this\n\n![](img/jslab101complete.png)\n"},{"title":"# Objectives","shortTitle":"01","contentMd":"# Objectives\n\nIn this Lab, you will be required to build a simple Node Console App (using WebStorm), called **DonationWeb.0.1**.  We will use the WebStorm IDE just to get used to using the environment.\n\nOn completion of this lab you'll be able to\n\n* create a basic Node Console App with limited CRUD functionality\n* work with some Node 'packages' and use them in your app\n* implement some simple JavaScript Callback functions\n"},{"title":"# Step 2 - Project Setup & Menu","shortTitle":"02","contentMd":"# Step 2 - Project Setup & Menu\n\nWe're going to build a simple Node Console app using **WebStorm**, so (assuming you already have it installed) launch your WebStorm IDE and create a new **Empty Project** as follows;\n\n![](img/jslab101.png)\n\nSelect 'Create New Project' and you should get something like this\n\n![](img/jslab102.png)\n\nMake sure you select 'Empty Project'\n\n![](img/jslab103.png)\n\nand browse to the location you want to store your project files. It's probably a good idea to store all your apps in a single folder ('donationweb' for me here) and create a new folder for our specific web app **donationweb-0.1** (as above).\n\nNow, Create a New 'File' (R-M-C (right mouse click is quickest))\n\n![](img/jslab104.png)\n\nname it **index** and make sue you choose **JavaScript** as the file type\n\n![](img/jslab105.png)\n\nPaste in the following JavaScript into your empty **index.js**\n\n~~~JS\nconst chalk         = require('chalk');\nconst readlineSync  = require('readline-sync');\n\nfunction displayMenu() {\n\n    let choice;\n\n    let options = ['Make A Donation', 'Display All Donations', 'Find A Donation', 'Delete A Donation'];\n\n    console.log('\\x1Bc'); // Clear the Screen\n    console.log(chalk.bold('----- DONATION -----'));\n    console.log('');\n    choice = readlineSync.keyInSelect(options, chalk.green.bold('Choose an Option?'));\n\n    if(choice+1 == 1)\n        ;\n    else if(choice+1 == 2)\n        ;\n    else if(choice+1 == 3)\n        ;\n    else if(choice+1 == 4)\n        ;\n    else\n        return process.exit(0);\n\n}\n\ndisplayMenu();\n~~~\n\nSave it and select 'Run index.js' to run/launch your App by R-M-C on your **index.js** file\n\n![](img/jslab106.png)\n\nYou'll get an error like the following :\n\n![](img/jslab107.png)\n\nwhich basically means we don't have the necessary dependencies (or node modules) installed that we want to use in our App. We can fix this like so\n\nFirst, in the menu, go to WebStorm->Preferences->Languages & Frameworks->Node & NPM\n\n![](img/jslab108.png)\n\nNow, click the add button\n\n![](img/jslab109.png)\n\nand search for **'chalk'** and install that package.\n\n![](img/jslab110.png)\n\n![](img/jslab111.png)\n\nYour Project structure should now look like this - take note of the **node_modules** folder\n\n![](img/jslab111a.png)\n\nDo the same for **'readline-sync'** and if everything goes to plan you should see something like this in the console window\n\n![](img/jslab114.png)\n\nOr maybe you don't??\n\nWe need to run our app via a **Terminal** Window for this kind of console I/O so launch a terminal like so\n\n![](img/jslab112.png)\n\nand type\n\n~~~\nnode index.js\n~~~\n\n![](img/jslab113.png)\n\nand this time you should see the menu.\n\n![](img/jslab114.png)\n\nIt doesn't do much except display a menu, but we'll add some functionality and interactivity in the rest of the steps.\n"},{"title":"","shortTitle":"03","contentMd":"\n# Step 3 - Displaying Donations\n\nBefore we make a start on some of the slightly more complex features of this version of our **DonationWeb** App, we'll implement the most straightforward option - displaying a list of donations to the user.\n\nFirst thing we need is an actual list to display so add the following to the top of your **index.js**\n\n~~~JS\nlet donations = [\n    {id: 1000000, paymenttype: 'PayPal', amount: 1600, upvotes: 1},\n    {id: 1000001, paymenttype: 'Direct', amount: 1100, upvotes: 4},\n    {id: 1000002, paymenttype: 'Visa', amount: 100, upvotes: 2}\n];\n~~~\n\nand we need some sort of 'looping' mechanism for our Menu so add this also and complete it\n\n~~~JS\nfunction continueYN() {\n  if (readlineSync.keyInYN('Do you want to Continue?'))\n        // 'Y' key was pressed.\n        //Display Menu\n       else\n        // Another key was pressed.\n       //Exit\n}\n~~~\n\nNow, using the 'chalk' module and the method above, implement a simple console menu that operates something like this:\n\nOn selecting option 1\n\n![](img/jslab115.png)\n\nOption 2\n\n![](img/jslab116.png)\n\nOption 3\n\n![](img/jslab117.png)\n\nand so on....\n\n**Well Done! - You've just created, customised and 'deployed' your first Donation Node App**.\n\n(And the full source code is on the next step, if you ran into any issues)\n"},{"title":"","shortTitle":"04","contentMd":"\n# Step 4 - Solution Source Code\n\n~~~JS\nconst chalk         = require('chalk');\nconst readlineSync  = require('readline-sync');\n\nlet donations = [\n    {id: 1000000, paymenttype: 'PayPal', amount: 1600, upvotes: 1},\n    {id: 1000001, paymenttype: 'Direct', amount: 1100, upvotes: 4},\n    {id: 1000002, paymenttype: 'Visa', amount: 100, upvotes: 2}\n];\n\nfunction continueYN() {\n    if (readlineSync.keyInYN('Do you want to Continue?'))\n    // 'Y' key was pressed.\n        displayMenu();\n    else\n    // Another key was pressed.\n        process.exit(0);\n}\n\nfunction displayMenu() {\n\n    let choice;\n\n    let options = ['Make A Donation', 'Display All Donations', 'Find A Donation', 'Delete A Donation'];\n\n    console.log('\\x1Bc'); // Clear the Screen\n    console.log(chalk.bold('----- DONATION -----'));\n    console.log('');\n    choice = readlineSync.keyInSelect(options, chalk.green.bold('Choose an Option?'));\n\n    if(choice+1 == 1)\n        console.log(chalk.red.bold('Make a Donation...'));\n    else if(choice+1 == 2)\n        console.log(donations);\n    else if(choice+1 == 3)\n        console.log(chalk.red.bold('Search for a Donation...'));\n    else if(choice+1 == 4)\n        console.log(chalk.red.bold('Delete a Donation...'));\n    else\n        return process.exit(0);\n\n    continueYN();\n}\n\ndisplayMenu();\n\n\n~~~\n"}]}